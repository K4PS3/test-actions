name: WebApi Package

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs: 
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }} 

    steps:
      - name: Get the source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.11
        with:
          versionSpec: 6.0.x

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.1.11

      - name: Display GitVersion outputs
        run: |
          echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    
      - name: Install dependencies
        run: dotnet restore /property:Configuration=Release

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Create the package
        run: dotnet pack -p:Version='${{ steps.gitversion.outputs.SemVer }}' --configuration Release

      - name: Save test results
        uses: actions/upload-artifact@v4
        with:
          name: nugetPackage
          path: ./Build/AppPackages

  release:
    runs-on: ubuntu-latest    
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:  
      - name: Download nuget package artifact
        uses: actions/download-artifact@v4
        with:
          name: nugetPackage

      - name: Display all files
        run: ls -a

      - name: Prep packages
        run: dotnet nuget add source --username k4ps3 --password ${{ secrets.NUGET_PACKAGE_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/k4ps3/index.json"

      - name: Push package to GitHub packages 
        if: needs.build.outputs.CommitsSinceVersionSource > 0
        run: dotnet nuget push nugetPackage/*.nupkg --api-key ${{ secrets.NUGET_PACKAGE_TOKEN }}  --source "github"
    
      - name: Create Release
        if: 1 == 0
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NUGET_PACKAGE_TOKEN }} 
        with:
          tag_name: ${{ needs.build.outputs.Version }}
          release_name: Release ${{ needs.build.outputs.Version }}

      - name: Create Release
        if: needs.build.outputs.CommitsSinceVersionSource > 0
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.build.outputs.Version }}
          name: Release ${{ needs.build.outputs.Version }}
          artifacts: "Build/AppPackages/*"
          token: ${{ secrets.NUGET_PACKAGE_TOKEN }}
